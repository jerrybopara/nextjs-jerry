name: Build & Deploy Nextjs to Ec2.

# Trigger deployment only on push to master branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  USERNAME: ubuntu
  REPODIR: nextjs-jerry


jobs:
  build: 

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with: 
          node-version: ${{ matrix.node-version }}
      
      - name: Install yarn
        run: npm install -g yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      
      - name: Install Deps
        working-directory: .
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install
      
      - name: Check Codebase
        working-directory: .
        run: yarn build

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Git Repo Code.
        uses: actions/checkout@v2

      - name: Deploy to Jerry - LightSail
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.AWS_KEY }}
          REMOTE_HOST: ${{ secrets.AWS_HOST }}
          REMOTE_USER: ${{ secrets.AWS_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}  

      - name: Building the App on Remote Server 
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_KEY }}
          script: | 
            # ls -al /home/ubuntu/next-js
            chown -R ${{ env.USERNAME }}:${{ env.USERNAME }} /home/${{ env.USERNAME }}/${{ env.REPODIR }}
            sh /home/${{ env.USERNAME }}/${{ env.REPODIR }}/deploy.sh



